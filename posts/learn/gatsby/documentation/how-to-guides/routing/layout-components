---
title: "Layout Components"
date: "2022-02-16"
slug : gatsby/documentation/how-to-guides/routing/layout-components
tags: ["learn"]
---

# 📖
# Layout Components

<div style="color:gray; font-style:italic;">2022/02/16 수요일</div>

### Shared page layout 공유 페이지 레이아웃

[https://www.gatsbyjs.com/docs/how-to/routing/layout-components/](https://www.gatsbyjs.com/docs/how-to/routing/layout-components/)

<br />

### 목차

레이아웃에 대한 개츠비의 접근

레이아웃 구성 요소는 무엇입니까?

레이아웃 구성 요소를 만드는 방법

페이지에 레이아웃 구성 요소를 가져오고 추가하는 방법

레이아웃 구성 요소가 마운트 해제되는 것을 방지하는 방법

기타 리소스

<br />

이 가이드에서는 레이아웃에 대한 Gatsby의 접근 방식, 레이아웃 구성 요소를 만들고 사용하는 방법, 레이아웃 구성 요소가 마운트 해제되는 것을 방지하는 방법을 배웁니다.

<br />

### 레이아웃에 대한 개츠비의 접근

Gatsby는 기본적으로 페이지에 레이아웃을 자동으로 적용하지 않습니다. 대신 Gatsby는 구성 요소를 가져오고 사용하는 React의 구성 모델을 따릅니다. 이를 통해 전체 머리글 및 바닥글과 같은 여러 수준의 레이아웃을 만든 다음 일부 페이지에서는 사이드바 메뉴를 만들 수 있습니다. 또한 레이아웃과 페이지 구성 요소 간에 데이터를 전달할 수 있습니다.

<br />

### 레이아웃 구성 요소는 무엇입니까?

레이아웃 요소들 당신의 사여러 페이지에서 공유하려는 사이트 섹션을 위한 것입니다. 예를 들어, Gatsby 사이트에는 일반적으로 공유 머리글과 바닥글이 있는 레이아웃 구성 요소가 있습니다. 레이아웃에 추가하는 다른 일반적인 사항은 사이드바 및/또는 탐색 메뉴입니다. 예를 들어 이 페이지에서 상단의 헤더는 gatsbyjs.com의 레이아웃 구성 요소의 일부입니다.

<br />



### 레이아웃 구성 요소를 만드는 방법

나머지 구성요소(예: `src/components/`)와 함께 레이아웃 구성 요소를 만드는 것이 좋습니다.

<br />

다음은 `src/components/layout.js`에서 매우 기본적인 레이아웃 구성 요소의 예입니다. : 

<br />

<div style="color:gray; font-size:12px;">JSX</div>

```jsx
import React from "react"
export default function Layout({ children }) {
  return (
    <div style={{ margin: `0 auto`, maxWidth: 650, padding: `0 1rem` }}>
      {children}
    </div>
  )
}
```

<div style="color:gray; font-size:11px;">src/components/layout.js</div> 


<br />

### 페이지에 레이아웃 구성 요소를 가져오고 추가하는 방법

페이지에 레이아웃을 적용하려면 `Layout` 구성요소를 포함하고 그 안에 페이지를 래핑해야 합니다. 예를 들어, 레이아웃을 첫 페이지에 적용하는 방법은 다음과 같습니다.

<br />

<div style="color:gray; font-size:12px;">JSX</div>

```jsx
import React from "react"
import Layout from "../components/layout"
export default function Home() {
  return (
    <Layout>
      <h1>I’m in a layout!</h1>
    </Layout>
  );
}
```

<div style="color:gray; font-size:11px;">src/pages/index.js</div> 

이 레이아웃이 필요한 모든 페이지와 템플릿에 대해 반복합니다.

<br />


### 레이아웃 구성 요소가 마운트 해제되는 것을 방지하는 방법

앞서 언급했듯이, Gatsby는 기본적으로 레이아웃 구성 요소에서 페이지를 래핑하지 않습니다.  “최상위 수준” 구성요소는 페이지 자체입니다. 결과적으로 "최상위 수준" 구성 요소가 페이지 간에 변경되면 React는 모든 자식을 다시 렌더링합니다. 즉, 탐색과 같은 공유 구성 요소가 마운트 해제되고 다시 마운트됩니다. 그이렇게 하면 해당 공유 구성 요소 내에서 CSS 전환 또는 React 상태가 중단됩니다.

<br />


페이지 변경 시 마운트 해제되지 않는 페이지 구성 요소 주위에 래퍼 구성 요소를 설정해야 하는 경우 `wrapPageElement` [브라우저 API](https://www.gatsbyjs.com/docs/reference/config-files/gatsby-browser/#wrapPageElement) 및 [SSR 동등한 기능](https://www.gatsbyjs.com/docs/reference/config-files/gatsby-ssr/#wrapPageElement)을 사용하세요.

<br />


또는 `wrapPageElement` API를 구현하는 `gatsby-plugin-layout`을 사용하여 레이아웃 구성 요소가 마운트 해제되는 것을 방지할 수 있습니다.

<br />


### 기타 리소스

[Gatsby에서 중첩된 레이아웃 구성요소 만들기](https://www.gatsbyjs.com/docs/tutorial/part-3/)

[Gatsby V2의 레이아웃 이후의 라이프](https://www.gatsbyjs.com/blog/2018-06-08-life-after-layouts/)

[v1에서 v2로 마이그레이션](https://www.gatsbyjs.com/docs/reference/release-notes/migrating-from-v1-to-v2/#remove-or-refactor-layout-components)

[gatsby-plugin-layout](https://www.gatsbyjs.com/plugins/gatsby-plugin-layout/)

[wrapPageElement Browser API](https://www.gatsbyjs.com/docs/reference/config-files/gatsby-browser/#wrapPageElement)

[wrapPageElement SSR API](https://www.gatsbyjs.com/docs/reference/config-files/gatsby-ssr/#wrapPageElement)

<br />

### ⚡️

래핑이란?
